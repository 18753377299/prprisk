<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ins.framework</groupId>
		<artifactId>ins-framework-parent</artifactId>
		<version>5.5.0-SNAPSHOT</version>
	</parent>
	<groupId>com.picc</groupId>
	<artifactId>pdfb4</artifactId>
	<version>4.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>pdfb4</name>
	<url>http://maven.apache.org</url>
	<properties>
		<pdfb4-framework.version>1.0.0-SNAPSHOT</pdfb4-framework.version>
		<druid-version>1.0.9</druid-version>
		<xstream.version>1.4.3</xstream.version>
		<json.version>1.1</json.version>
		<quartz.version>2.1.6</quartz.version>
		<mysql-connector.version>5.1.22</mysql-connector.version>
		<cglib.version>2.2.2</cglib.version>
		<cxf.version>3.0.3</cxf.version>
		<spring.version>4.1.6.RELEASE</spring.version>
		<spring.security.version>4.0.3.RELEASE</spring.security.version>
		<oauth2.version>1.0.1</oauth2.version>
	</properties>
	<!-- 设定除中央仓库(repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查找. -->
	<repositories>
		<!-- 如有Nexus私服, 取消注释并指向正确的服务器地址. -->
		<repository>
			<id>nexus</id>
			<name>Team 
				Nexus Repository</name>

			<url>http://11.137.136.145:8081/nexus/content/groups/public</url>
			<!-- <url>http://repo.jsptz.com/nexus/content/groups/public</url> -->
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>4.2.7.Final</version>
		</dependency>
		<dependency>
			<groupId>ins.framework</groupId>
			<artifactId>pdfb4-framework</artifactId>
			<version>${pdfb4-framework.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>bres</artifactId>
					<groupId>ilog.rules</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ehcache</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ins-framework-dubbo</artifactId>
					<groupId>ins.framework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
		</dependency>
		<dependency>
			<groupId>com.github.axet</groupId>
			<artifactId>kaptcha</artifactId>
			<version>0.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<!-- will come with Hibernate core -->
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.xml.stream</groupId>
					<artifactId>stax-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring security -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
			<version>${oauth2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>${oauth2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.client</artifactId>
			<version>${oauth2.version}</version>
		</dependency>
		<!-- jdbc driver -->
		<!-- for mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector.version}</version>
		</dependency>
		<!-- for oracle -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc14</artifactId>
			<version>10.2.0.4.0</version>
		</dependency>
		<!-- security -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.1</version>
		</dependency>
		<!-- jackson so spring mvc will handle json responses out of the box -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.2</version>
		</dependency>
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<classifier>jdk13</classifier>
			<version>${json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>hessian</artifactId>
			<version>4.0.33</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>2.2.1-b04</version>
		</dependency>
		<!-- sitemesh -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid-version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.apache.cxf</groupId> <artifactId>apache-cxf</artifactId> 
			<version>${cxf.version}</version> <type>pom</type> </dependency> <dependency> 
			<groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId> 
			<version>4.3.2.Final</version> </dependency> <dependency> <groupId>javax.validation</groupId> 
			<artifactId>validation-api</artifactId> <version>1.0.0.GA</version> </dependency> -->
		<!-- j2ee web 规范依赖包开始 -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>com.picc.pdfb</groupId>
			<artifactId>pdfb-pwvalidator</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.picc.pdfb</groupId>
			<artifactId>pdfb-aoplog</artifactId>
			<version>1.0.3-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.3</version><!-- 1.0.10 -->
		</dependency>
		<!-- <dependency> <groupId>org.apache.oltu.oauth2</groupId> <artifactId>org.apache.oltu.oauth2.authzserver</artifactId> 
			<version>1.0.1</version> </dependency> <dependency> <groupId>org.apache.oltu.oauth2</groupId> 
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId> <version>1.0.1</version> 
			</dependency> -->
	</dependencies>
	<build>
		<finalName>${final.name}</finalName>
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
		<outputDirectory>${basedir}/src/main/webapp/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<targetPath>${basedir}/src/main/webapp/WEB-INF/classes</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
					<include>*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
					<include>*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<!-- 拷贝依赖的jar包到lib目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<outputDirectory>${basedir}/src/main/webapp/WEB-INF/lib</outputDirectory>
					<excludeTransitive>false</excludeTransitive>
					<stripVersion>true</stripVersion>
				</configuration>
				<executions>
					<execution>
						<id>copy</id>
						<phase>clean</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${basedir}/src/main/webapp/WEB-INF/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 执行ant插件 -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
					</dependency>
					<!-- <dependency> -->
					<!-- <groupId>org.apache.ant</groupId> -->
					<!-- <artifactId>ant</artifactId> -->
					<!-- <version>1.9.5</version> -->
					<!-- </dependency> -->
					<!-- <dependency> -->
					<!-- <groupId>ant-jsch</groupId> -->
					<!-- <artifactId>ant-jsch</artifactId> -->
					<!-- <version>1.0</version> -->
					<!-- </dependency> -->
					<!-- <dependency> -->
					<!-- <groupId>ant-jsch</groupId> -->
					<!-- <artifactId>ant-jsch</artifactId> -->
					<!-- <version>0.1.53</version> -->
					<!-- </dependency> -->
				</dependencies>
				<executions>
					<execution>
						<id>package</id>
						<phase>package</phase><!--当 maven执行完package命令后调用ant命令 -->
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- 引用相对路径中的build.xml文件，执行name为restart的target标签 -->
								<ant antfile="build/build.xml" target="deployApp">
									<property name="external.param.env" value="${external.param.env}" />
								</ant>
								<!-- <ant antfile="build_one.xml" target="all"></ant> -->
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
		
			<plugins>
<!-- 				<plugin> -->
<!-- 			        <groupId>org.codehaus.mojo</groupId> -->
<!-- 			        <artifactId>sonar-maven-plugin</artifactId> -->
<!--  			        <version>${sonarVersion}</version> -->
<!-- 			    </plugin> -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<charset>UTF-8</charset>
						<docencoding>UTF-8</docencoding>
						<warName>${final.name}</warName>
						<webResources>
							<webResource>
								<directory>${runtime.env}</directory>
								<targetPath>WEB-INF/classes</targetPath>
							</webResource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<configuration>
						<jvmArgs>-Xms256m -Xmx512m -XX:MaxPermSize=512m</jvmArgs>
						<webAppConfig>
							<contextPath>/${final.name}</contextPath>
							<jettyEnvXml>${runtime.env}/config/jetty-env.xml</jettyEnvXml>
						</webAppConfig>
						<connectors>
							<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
								<port>8080</port>
								<maxIdleTime>60000</maxIdleTime>
							</connector>
						</connectors>
						<!-- 指定额外需要监控变化的文件或文件夹，主要用于热部署中的识别文件更新 -->
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src</directory>
								<includes>
									<include>**/*.java</include>
									<include>**/*.properties</include>
								</includes>
								<!-- <excludes> <exclude>**/*.xml</exclude> <exclude>**/myspecial.properties</exclude> 
									</excludes> -->
							</scanTargetPattern>
						</scanTargetPatterns>
						<scanIntervalSeconds>0</scanIntervalSeconds><!-- 指定监控的扫描时间间隔，0为关闭jetty自身的热部署，主要是为了使用jrebel -->
						<webAppSourceDirectory>${basedir}/src/main/webapp</webAppSourceDirectory><!-- 
							指定web页面的文件夹 -->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<runtime.env>src/main/env/dev</runtime.env>
				<final.name>pdfb4</final.name>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>sit</id>
			<properties>
				<runtime.env>src/main/env/sit</runtime.env>
				<final.name>pdfb4</final.name>
			</properties>
		</profile>
		<profile>
			<id>uat</id>
			<properties>
				<runtime.env>src/main/env/uat</runtime.env>
				<final.name>pdfb4</final.name>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<runtime.env>src/main/env/prod</runtime.env>
				<final.name>pdfb4</final.name>
			</properties>
		</profile>
	</profiles>
</project>