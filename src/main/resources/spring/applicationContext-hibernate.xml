<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-autowire="byName" default-lazy-init="false">
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 可以加多个包 -->
		<property name="packagesToScan" value="ins.**.schema,ins.**.model,com.**.schema" />
		<property name="hibernateProperties">
			<props>
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->

				<!-- 开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 二级缓存区域名的前缀 -->
				<!-- <prop key="hibernate.cache.region_prefix">h3test</prop> -->
				<!-- 高速缓存提供程序 -->
				<!-- <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop> -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<!-- 指定缓存配置文件位置 -->
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
				<!-- 强制Hibernate以更人性化的格式将数据存入二级缓存 -->
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<!-- Hibernate将收集有助于性能调节的统计数据 -->
				<prop key="hibernate.generate_statistics">true</prop>
			</props>
		</property>
	</bean>
	<bean id="databaseDo" class="ins.framework.dao.database.DatabaseDaoHibernateImpl">
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"/>
	<!-- 配置Hibernate事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<bean id="manyDataSourceAspect" class="ins.platform.common.db.aspect.DataSourceAspect">
		<property name="dataSources" ref="dataSources" />
	</bean>
	<aop:config>
		<aop:aspect id="c" ref="manyDataSourceAspect">
			<aop:pointcut id="tx"
				expression="execution(public * ins..*.*Service.*(..))||execution(public * com.picc..service..*Service.*(..))" />
			<aop:before pointcut-ref="tx" method="before" />
			<aop:after pointcut-ref="tx" method="after"/>
		</aop:aspect>
	</aop:config>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true" expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:advisor pointcut="execution(public * ins..*.*Service*Impl.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(public * com..*.*Service*Impl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置. 默认的设置请参考Spring文档事务一章. -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="is*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="translateCode*" read-only="true" />
			<tx:method name="show*" read-only="true" />
			<tx:method name="executeRules*" read-only="true" />
			<tx:method name="findForPage*" read-only="true" isolation="SERIALIZABLE" />
			<tx:method name="findAll*" read-only="true" propagation="NEVER"
				isolation="SERIALIZABLE" />
			<tx:method name="*" propagation="REQUIRED" />

		</tx:attributes>
	</tx:advice>
</beans>